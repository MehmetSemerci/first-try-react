{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehe\\\\Desktop\\\\React\\\\first-try-react\\\\Module14\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isFetching, setisFetching] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMoviesHandler() {\n    setMovies([]);\n    setisFetching(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/film/');\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const transformedMovies = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setisFetching(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, isFetching ? \"Fetching\" : \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, !error && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }\n  }), error && error.message));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/mehe/Desktop/React/first-try-react/Module14/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isFetching","setisFetching","error","setError","fetchMoviesHandler","response","fetch","data","json","ok","Error","transformedMovies","results","map","movie","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACC,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAED,iBAAeS,kBAAf,GAAoC;AACjCL,IAAAA,SAAS,CAAC,EAAD,CAAT;AACFE,IAAAA,aAAa,CAAC,IAAD,CAAb;AACEE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAG;AACD,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,YAAMC,iBAAiB,GAAGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AACpD,eAAO;AACLC,UAAAA,EAAE,EAAED,KAAK,CAACE,UADL;AAELC,UAAAA,KAAK,EAAEH,KAAK,CAACG,KAFR;AAGLC,UAAAA,WAAW,EAAEJ,KAAK,CAACK,aAHd;AAILC,UAAAA,WAAW,EAAEN,KAAK,CAACO;AAJd,SAAP;AAMD,OAPyB,CAA1B;AAQAtB,MAAAA,SAAS,CAACY,iBAAD,CAAT;AACD,KAfD,CAgBA,OAAMT,KAAN,EAAY;AACVC,MAAAA,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;AACD;;AACHrB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA;;AAED,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCJ,UAAU,GAAG,UAAH,GAAgB,cAAhE,CADD,CADD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACE,KAAD,iBAAU,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEJ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,EAEMI,KAAK,IAAIA,KAAK,CAACoB,OAFrB,CAJD,CADD;AAWA;;AAED,eAAezB,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isFetching, setisFetching] = useState(false);\n  const [error, setError] = useState(null);\n\n\tasync function fetchMoviesHandler() {\n    setMovies([])\n\t\tsetisFetching(true);\n    setError(null);\n    try{\n      const response = await fetch('https://swapi.dev/api/film/');\n      const data = await response.json();\n      if(!response.ok){\n        throw new Error('Something went wrong!');\n      }\n      const transformedMovies = data.results.map((movie) => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date,\n        };\n      });\n      setMovies(transformedMovies);\n    }\n    catch(error){\n      setError(error.message);\n    }\n\t\tsetisFetching(false);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>{isFetching ? \"Fetching\" : \"Fetch Movies\"}</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t{!error && <MoviesList movies={movies} />}\n        {error && error.message}\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}