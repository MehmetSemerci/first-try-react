{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehe\\\\Desktop\\\\React\\\\first-try-react\\\\Module10ReducerPractice\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const authCtx = useContext(AuthContext); // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    console.log('EFFECT RUNNING');\n    return () => {\n      console.log('EFFECT CLEANUP');\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   enteredEmail.includes('@') && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"QGHv9TUIcsAc0ExHaKoABPD/RnA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/mehe/Desktop/React/first-try-react/Module10ReducerPractice/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","length","passwordReducer","Login","props","authCtx","formIsValid","setFormIsValid","emailInputRef","passwordInputRef","emailState","dispatchEmail","passwordState","dispatchPassword","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst emailReducer = (state, action) => {\n\tif (action.type === 'USER_INPUT') {\n\t\treturn { value: action.val, isValid: action.val.length > 6 };\n\t}\n\tif (action.type === 'INPUT_BLUR') {\n\t\treturn { value: state.value, isValid: state.value.length > 6 };\n\t}\n\treturn { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n\tif (action.type === 'USER_INPUT') {\n\t\treturn { value: action.val, isValid: action.val.length > 6 };\n\t}\n\tif (action.type === 'INPUT_BLUR') {\n\t\treturn { value: state.value, isValid: state.value.length > 6 };\n\t}\n\treturn { value: '', isValid: false };\n};\n\nconst Login = (props) => {\n\tconst authCtx = useContext(AuthContext);\n\t// const [enteredEmail, setEnteredEmail] = useState('');\n\t// const [emailIsValid, setEmailIsValid] = useState();\n\tconst [formIsValid, setFormIsValid] = useState(false);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n\tconst [emailState, dispatchEmail] = useReducer(emailReducer, {\n\t\tvalue: '',\n\t\tisValid: null,\n\t});\n\tconst [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n\t\tvalue: '',\n\t\tisValid: null,\n\t});\n\n\tuseEffect(() => {\n\t\tconsole.log('EFFECT RUNNING');\n\n\t\treturn () => {\n\t\t\tconsole.log('EFFECT CLEANUP');\n\t\t};\n\t}, []);\n\n\tconst { isValid: emailIsValid } = emailState;\n\tconst { isValid: passwordIsValid } = passwordState;\n\n\tuseEffect(() => {\n\t\tconst identifier = setTimeout(() => {\n\t\t\tconsole.log('Checking form validity!');\n\t\t\tsetFormIsValid(emailIsValid && passwordIsValid);\n\t\t}, 500);\n\n\t\treturn () => {\n\t\t\tconsole.log('CLEANUP');\n\t\t\tclearTimeout(identifier);\n\t\t};\n\t}, [emailIsValid, passwordIsValid]);\n\n\tconst emailChangeHandler = (event) => {\n\t\tdispatchEmail({ type: 'USER_INPUT', val: event.target.value });\n\n\t\t// setFormIsValid(\n\t\t//   event.target.value.includes('@') && passwordState.value.trim().length > 6\n\t\t// );\n\t};\n\n\tconst passwordChangeHandler = (event) => {\n\t\tdispatchPassword({ type: 'USER_INPUT', val: event.target.value });\n\n\t\t// setFormIsValid(\n\t\t//   enteredEmail.includes('@') && event.target.value.trim().length > 6\n\t\t// );\n\t};\n\n\tconst validateEmailHandler = () => {\n\t\tdispatchEmail({ type: 'INPUT_BLUR' });\n\t};\n\n\tconst validatePasswordHandler = () => {\n\t\tdispatchPassword({ type: 'INPUT_BLUR' });\n\t};\n\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tif (formIsValid) {\n\t\t\tauthCtx.onLogin(emailState.value, passwordState.value);\n\t\t} else if (!emailIsValid) {\n\t\t} else {\n\t\t}\n\t};\n\n\treturn (\n\t\t<Card className={classes.login}>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<Input\n          ref={emailInputRef}\n\t\t\t\t\tid='email'\n\t\t\t\t\tlabel='E-Mail'\n\t\t\t\t\ttype='email'\n\t\t\t\t\tisValid={emailIsValid}\n\t\t\t\t\tvalue={emailState.value}\n\t\t\t\t\tonChange={emailChangeHandler}\n\t\t\t\t\tonBlur={validateEmailHandler}\n\t\t\t\t/>\n\t\t\t\t<Input\n          ref={passwordInputRef}\n\t\t\t\t\tid='password'\n\t\t\t\t\tlabel='Password'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tisValid={passwordIsValid}\n\t\t\t\t\tvalue={passwordState.value}\n\t\t\t\t\tonChange={passwordChangeHandler}\n\t\t\t\t\tonBlur={validatePasswordHandler}\n\t\t\t\t/>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<Button type='submit' className={classes.btn}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</Card>\n\t);\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}