{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehe\\\\Desktop\\\\React\\\\first-try-react\\\\Module10ReducerPractice\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedin, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"4qqf7PLkDTsZsodKmDt241cnOng=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/mehe/Desktop/React/first-try-react/Module10ReducerPractice/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","props","isLoggedin","setIsLoggedIn","logoutHandler","loginHandler","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFkB,CAApB,CAApB;;AAKA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMS,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACvBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAA,cAAuBF,KAAK,CAACK;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAZD;;GAAMN,mB;;KAAAA,mB;AAcN,eAAeJ,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => {}\r\n});\r\n\r\nconst AuthContextProvider = (props) => {\r\n    const [isLoggedin, setIsLoggedIn] = useState(false);\r\n\r\n    const logoutHandler = () => {\r\n        setIsLoggedIn(false);\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        setIsLoggedIn(true);\r\n    }\r\n\r\n    return <AuthContext.Provider>{props.children}</AuthContext.Provider>;\r\n}\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}