{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehe\\\\Desktop\\\\React\\\\first-try-react\\\\Module10ReducerPractice\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\n\nconst AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedin, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedin,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthContextProvider, \"4qqf7PLkDTsZsodKmDt241cnOng=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/mehe/Desktop/React/first-try-react/Module10ReducerPractice/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","isLoggedin","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACvCC,EAAAA,UAAU,EAAE,KAD2B;AAEvCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFqB;AAGvCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHO,CAApB,CAApB;;AAMA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMY,aAAa,GAAG,MAAM;AACrBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACNH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD;;AAKA,QAAMI,YAAY,GAAG,MAAM;AACpBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACNL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAHD;;AAKA,sBACC,QAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNR,MAAAA,UAAU,EAAEO,UADN;AAENN,MAAAA,QAAQ,EAAEQ,aAFJ;AAGNP,MAAAA,OAAO,EAAEU;AAHH,KADR;AAAA,cAOEN,KAAK,CAACQ;AAPR;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAxBD;;GAAMT,mB;;KAAAA,mB;AA0BN,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n\tisLoggedIn: false,\r\n\tonLogout: () => {},\r\n\tonLogin: (email, password) => {},\r\n});\r\n\r\nconst AuthContextProvider = (props) => {\r\n\tconst [isLoggedin, setIsLoggedIn] = useState(false);\r\n\r\n\tconst logoutHandler = () => {\r\n        localStorage.removeItem('isLoggedIn');\r\n\t\tsetIsLoggedIn(false);\r\n\t};\r\n\r\n\tconst loginHandler = () => {\r\n        localStorage.setItem('isLoggedIn', '1');\r\n\t\tsetIsLoggedIn(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tisLoggedIn: isLoggedin,\r\n\t\t\t\tonLogout: logoutHandler,\r\n\t\t\t\tonLogin: loginHandler,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}