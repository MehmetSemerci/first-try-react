{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehe\\\\Desktop\\\\React\\\\first-try-react\\\\Module10ReducerPractice\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedin, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedin,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthContextProvider, \"En47naM8XKUMlMGy4XKeIqsOLNU=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/mehe/Desktop/React/first-try-react/Module10ReducerPractice/src/store/auth-context.js"],"names":["React","useEffect","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","isLoggedin","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACvCC,EAAAA,UAAU,EAAE,KAD2B;AAEvCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFqB;AAGvCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHO,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEGD,EAAAA,SAAS,CAAC,MAAM;AAClB,UAAMa,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AAEA,QAAIF,6BAA6B,KAAK,GAAtC,EAA2C;AAC1CD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACD,GANW,EAMT,EANS,CAAT;;AAQH,QAAMI,aAAa,GAAG,MAAM;AACrBF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACNL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAHD;;AAKA,QAAMM,YAAY,GAAG,MAAM;AACpBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACNP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,GAHD;;AAKA,sBACC,QAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNR,MAAAA,UAAU,EAAEO,UADN;AAENN,MAAAA,QAAQ,EAAEW,aAFJ;AAGNV,MAAAA,OAAO,EAAEY;AAHH,KADR;AAAA,cAOER,KAAK,CAACU;AAPR;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAhCM;;GAAMX,mB;;KAAAA,mB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n\tisLoggedIn: false,\r\n\tonLogout: () => {},\r\n\tonLogin: (email, password) => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\tconst [isLoggedin, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n\t\tconst storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\r\n\r\n\t\tif (storedUserLoggedInInformation === '1') {\r\n\t\t\tsetIsLoggedIn(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst logoutHandler = () => {\r\n        localStorage.removeItem('isLoggedIn');\r\n\t\tsetIsLoggedIn(false);\r\n\t};\r\n\r\n\tconst loginHandler = () => {\r\n        localStorage.setItem('isLoggedIn', '1');\r\n\t\tsetIsLoggedIn(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tisLoggedIn: isLoggedin,\r\n\t\t\t\tonLogout: logoutHandler,\r\n\t\t\t\tonLogin: loginHandler,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}